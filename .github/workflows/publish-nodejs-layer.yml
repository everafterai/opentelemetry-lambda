name: Build and Publish Custom Node.js Lambda Layer

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region to publish the layer to'
        required: true
        type: choice
        options:
          - us-east-1
          - eu-central-1
        default: 'us-east-1'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required for configure-aws-credentials
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build Node.js Layer
        run: |
          cd nodejs
          npm install
          npm run build
        working-directory: ${{ github.workspace }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}

      - name: Publish Layer to AWS
        id: publish-layer
        run: |
          LAYER_NAME="custom-otel-nodejs-layer"
          ZIP_FILE="nodejs/packages/layer/build/layer.zip"
          DESCRIPTION="Custom OTel Node.js layer with HTTP header capture (built by GitHub Actions)"
          COMPATIBLE_RUNTIMES="nodejs18.x nodejs20.x"
          
          echo "Publishing $LAYER_NAME to region ${{ github.event.inputs.region }}..."
          
          output=$(aws lambda publish-layer-version \
            --layer-name $LAYER_NAME \
            --description "$DESCRIPTION" \
            --zip-file fileb://$ZIP_FILE \
            --compatible-runtimes $COMPATIBLE_RUNTIMES \
            --region ${{ github.event.inputs.region }} \
            --output json)
            
          layer_arn=$(echo $output | jq -r '.LayerVersionArn')
          echo "Published Layer ARN: $layer_arn"
          echo "layer_arn=$layer_arn" >> $GITHUB_OUTPUT
        working-directory: ${{ github.workspace }}